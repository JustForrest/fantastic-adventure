version: '3.9'

services:
  postgres:
    image: postgis/postgis:14-3.3-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - fantastic_adventure_postgres_data:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - fantastic-adventure-network

  typesense:
    image: typesense/typesense:0.25.0
    restart: always
    ports:
      - '8108:8108'
    volumes:
      - fantastic_adventure_typesense_data:/data
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - TYPESENSE_DATA_DIR=/data
    networks:
      - fantastic-adventure-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fantastic-adventure-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  fantastic_adventure_postgres_data:
    name: fantastic_adventure_postgres_data
  fantastic_adventure_typesense_data:
    name: fantastic_adventure_typesense_data
  turbo_cache:
    name: turbo_cache
  prometheus_data:
    name: fantastic_adventure_prometheus_data
  redis_data:
    name: fantastic_adventure_redis_data

networks:
  fantastic-adventure-network:
    driver: bridge
